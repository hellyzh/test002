# This is just an example workflow for continuous deployment.
# You should customize it to meet your own requirements.
name: 'SPFx CD'

trigger:
# When new commits are pushed onto the main branch.
- tmtestspfx

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: buildAndPublish
  steps:
    - task: NodeTool@0
      displayName: Setup environment
      inputs:
        versionSpec: '14.x'
        checkLatest: true

    # Checkout the code
    - checkout: git://demo/teamsfx-cli-action-azuretest@tmtestspfx
        
    # The way to build the current project depends on how you scaffold it.
    # Different folder structures require different commands set.
    # 'npm ci' is used here to install dependencies and it depends on package-lock.json.
    # If you prefer to use 'npm ci', please make sure to commit package-lock.json first, or just change it to 'npm install'.
    - task: Bash@3
      displayName: Build the project
      inputs:
        targetType: 'inline'
        script: |
          cd SPFx && npm install && npm run build

    # Currently, no opinioned solution for unit test provided during scaffolding, so,
    # set up any unit test framework you prefer (for example, mocha or jest) and update the commands accordingly in below.
    - task: Bash@3
      displayName: Run unit test
      inputs:
        targetType: 'inline'
        script: |
          cd SPFx && npm run test

    - task: teamsfx-cli-task@1
      displayName: Deploy to hosting environment
      env:
        M365_ACCOUNT_NAME: $(M365_ACCOUNT_NAME)
        M365_ACCOUNT_PASSWORD: $(M365_ACCOUNT_PASSWORD)
      inputs:
        commands: deploy

    - task: PublishBuildArtifacts@1
      displayName: Upload Teams App's SharePoint package as artifact
      inputs:
        PathtoPublish: 'SPFx/sharepoint/solution'
        ArtifactName: 'sppkg'
        publishLocation: 'Container'

    # This step is to pack the Teams App as zip file,
    # which can be used to be uploaded onto Teams Client for installation.
    - task: teamsfx-cli-task@1
      displayName: Package Teams App for publishing
      inputs:
        commands: build

    - task: PublishBuildArtifacts@1
      displayName: Upload Teams App's package as artifact
      inputs:
        PathtoPublish: appPackage/appPackage.zip
        ArtifactName: 'appPackage'
        publishLocation: 'Container'

    - task: teamsfx-cli-task@1
      displayName: Publish Teams App
      env:
        M365_ACCOUNT_NAME: $(M365_ACCOUNT_NAME)
        M365_ACCOUNT_PASSWORD: $(M365_ACCOUNT_PASSWORD)
      inputs:
        commands: publish
