# This is just an example workflow for continuous integration.
# You should customize it to meet your own requirements.
name: 'test-yml'
on:
  # Manually trigger this workflow, and you should pick the right branch.
  workflow_dispatch:
  
jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      M365_USERNAME1: test04@xxbdw.onmicrosoft.com
    outputs:
      cases: ${{ steps.env-a.outputs.cases }}
    steps:

      - name: Checkout dev branch
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Install npm packages
        run: |
          npm install

      - name: set env
        id: env-a
        run: |
          echo "cases=This is cases variable" >> $GITHUB_OUTPUT

      - name: set env3
        run: |
          users=("${{ secrets.M365_USERNAME }}" "${{ secrets.M365_USERNAME_2 }}" "${{ secrets.M365_USERNAME_3 }}" "${{ secrets.M365_USERNAME_4 }}")
          count=${#users[@]}
          index=$((RANDOM%$count))
          echo "account index: $index"
          echo "AZURE_ACCOUNT_NAME=${users[index]}" >> $GITHUB_ENV

      - name: echo env
        run: |
          npx ts-node src/a.ts

  main:
    name: main
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Install npm packages
        run: |
          npm install axios
  
      - name: list 1
        run: |
          ls
          cat package.json 

      - name: Checkout
        uses: actions/checkout@v3

      - name: list 2
        run: |
          ls
          cat package.json



      - name: in main
        if: contains('aHelloTest', 'hello')
        id: list-jobs
        run: |
          echo main1
          echo "to=v-helzha@microsoft.com" >> $GITHUB_OUTPUT
          echo "body=test from action" >> $GITHUB_OUTPUT
          echo "subject=title from action" >> $GITHUB_OUTPUT

      - name: Setup node 2
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: node version
        run: |
          node -v
          
      - name: Get Release Detail
        id: detail
        uses: actions/github-script@v6
        with:
          script: |
            const md_to_html = async() => {
            const note = "testnote";
            const emailBody = note + "\n\nDetails can be found here: " + "https://example.com";
            return emailBody;
            }
            return md_to_html();

      - name: check env file
        run: |
          echo ${{ steps.list-jobs.outputs.body }}
          echo ${{ steps.detail.outputs.result }}

      - name: Hello World2
        uses: ./.github/actions/send-report
        env:
          TO: ${{ steps.list-jobs.outputs.to }}
          BODY: '"${{ steps.list-jobs.outputs.body }}"'
          SUBJECT: ${{ steps.list-jobs.outputs.subject }}
          MAIL_CLIENT_ID: ${{ secrets.TEST_CLEAN_CLIENT_ID }}
          MAIL_CLIENT_SECRET: ${{ secrets.TEST_CLEAN_CLIENT_SECRET }}
          MAIL_TENANT_ID: ${{ secrets.TEST_CLEAN_TENANT_ID }}

      - name: Send E-mail
        uses: ./.github/actions/send-report
        env:
          TO: ${{ steps.list-jobs.outputs.to }}
          BODY: ${{ steps.detail.outputs.result }}
          SUBJECT: ${{ steps.list-jobs.outputs.subject }}
          MAIL_CLIENT_ID: ${{ secrets.TEST_CLEAN_CLIENT_ID }}
          MAIL_CLIENT_SECRET: ${{ secrets.TEST_CLEAN_CLIENT_SECRET }}
          MAIL_TENANT_ID: ${{ secrets.TEST_CLEAN_TENANT_ID }}

  report:
    needs: [setup, main]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test Environment
        run: |
          echo "This is in double quotation marks"
          echo 'This is in single quotation mark'
          echo This is not in quotation marks
