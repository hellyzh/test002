# This is just an example workflow for continuous integration.
# You should customize it to meet your own requirements.
name: 'Continuous Integration'
on:
  # Manually trigger this workflow, and you should pick the right branch.
  workflow_dispatch:
  schedule:
    - cron: "51 6 * * *"
    branches: dev
  
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cases: ${{steps.job1.outputs.cases}}
    steps:
      - name: echo element
        id: job1
        run: echo "::set-output name=cases::[10,11]"  

  buildAndTest:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        cases: ${{ fromJson(needs.setup.outputs.cases) }}
    name: ${{ matrix.cases }}
    steps:
      # Setup environment.
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout the code
        uses: actions/checkout@v2
 
      # Build the project.
      # The way to build the current project depends on how you scaffold it.
      # Different folder structures require different commands set.
      # 'npm ci' is prefered to be used here to install dependencies and it depends on package-lock.json.
      # If you prefer to use 'npm ci', please make sure to commit package-lock.json first, or just change it to 'npm install'.
      - name: Build the project
        run: echo ${{github.ref}}

      # Run unit test.
      # Currently, no opinionated solution for unit test provided during scaffolding, so,
      # set up any unit test framework you prefer (for example, mocha or jest) and update the commands accordingly in below.
      # - name: Run Unit Test
      #   run: npm run test

      - name: hello
        uses: hellyzh/test003@main
        with:
          who-to-greet: 'Mona the Octocat'