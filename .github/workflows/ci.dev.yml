# This is just an example workflow for continuous integration.
# You should customize it to meet your own requirements.
name: 'Continuous Integration'
on:
  # Manually trigger this workflow, and you should pick the right branch.
  workflow_dispatch:
  schedule:
        - cron: "5 6 * * *"
        - cron: "10 6 * * *"
  
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cases: ${{steps.job1.outputs.cases}}
      tv2: ${{steps.job1.outputs.tv2}}
    steps:
      - name: echo element
        id: job1
        run: |
          echo "::set-output name=cases::[10]"
          echo "::set-output name=tv2::test-tv2"

      - name: element2
        id: job-id
        run: |
          echo "::set-output name=ele-tt::ele-tt-value"
          echo  ${{github.ref_name}}
          echo again
          if [ ${{github.ref_name}} == 'main' ]; then
            echo main
          else
            echo other
          fi

      - name: echo test
        run: echo ${{ steps.job1.outputs.tv2 }} ${{ steps.job-id.outputs.ele-tt }}

  buildAndTest:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        cases: ${{ fromJson(needs.setup.outputs.cases) }}
    name: ${{ matrix.cases }}
    steps:
      # Setup environment.
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout the code
        if: github.event.schedule == '5 6 * * *' || ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v2

      - name: Checkout the code
        if: github.event.schedule == '10 6 * * *'
        uses: actions/checkout@v2
        with:
          ref: dev
 
      - name: Build the project
        run: echo ${{github.ref}}

      - name: Build the project
        run: cat devupdate.txt

      - name: print variable2
        run: echo ${{ needs.setup.outputs.tv2 }}

      - name: main-dev
        run: cat devupdate.txt

      - name: hello
        uses: hellyzh/test003@main
        with:
          who-to-greet: 'Mona the Octocat'