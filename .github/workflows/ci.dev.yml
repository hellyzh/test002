# This is just an example workflow for continuous integration.
# You should customize it to meet your own requirements.
name: 'Continuous Integration'
on:
  # Manually trigger this workflow, and you should pick the right branch.
  workflow_dispatch:
    inputs:
      tag:
        description: 'vsix release tag. e.g. stable, rc or leave it empty to use latest daily release'
        required: false
  schedule:
    - cron: "0 4 * * *"
    - cron: "10 4,9 * * *"
  
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cases: ${{steps.job1.outputs.cases}}
      tv2: ${{steps.job1.outputs.tv2}}
    steps:
      - name: echo element
        id: job1
        run: |
          echo "::set-output name=cases::[10]"
          echo "::set-output name=tv2::test-tv2"

      - name: schedule name
        run: |
          echo ${{ github.event_name }}

      - name: Check if scheduled test
        id: check-if-scheduled-test
        run: |
          if [ ! -z "${{ github.event.schedule }}" ]; then
            if [ "${{ github.event.schedule }}" == '35 1 * * *' ]; then
              echo "::set-output name=scheduled-stable-release::true"
            fi

            if [ "${{ github.event.schedule }}" == '40 1,9 * * *' ]; then
              echo "::set-output name=scheduled-daily-release::true"
            fi
          fi

      - name: Get release tag
        id: get-release-tag
        run: |          
          releaseTag='${{ github.event.inputs.tag }}'
          if [ ! -z "$releaseTag" ]; then             
            if [ "$releaseTag" == 'stable' ]; then
              echo "::set-output name=release-tag::stable"
            elif [ "$releaseTag" == 'rc' ]; then
              echo "::set-output name=release-tag::rc"
            elif [ "$releaseTag" == 'alpha' ]; then
              echo "::set-output name=release-tag::alpha"
            else
              echo "::set-output name=release-tag::$releaseTag"
            fi
          else
            if [ "${{ github.ref_name }}" == 'main' ]; then
              if [ ${{ steps.check-if-scheduled-test.outputs.scheduled-stable-release }} ]; then
                echo "::set-output name=release-tag::stable"
                echo scheduledstable
              fi

              if [ ${{ steps.check-if-scheduled-test.outputs.scheduled-daily-release }} ]; then
                echo "::set-output name=release-tag::alpha"
                echo scheduledalpha
              else
                echo "::set-output name=release-tag::stable"
              fi
            elif [ "${{ github.ref_name }}" == 'dev' ]; then
              echo "::set-output name=release-tag::alpha"
            elif [ "${{ github.ref_name }}" == 'rc' ]; then
              echo "::set-output name=release-tag::rc"
            else
              echo "::set-output name=release-tag::alpha"
            fi
          fi

      - name: print release tag
        run: |          
          echo ${{ steps.get-release-tag.outputs.release-tag }}

      - name: print scheduled variable
        run: |
          echo stable_variable      
          echo ${{ steps.check-if-scheduled-test.outputs.scheduled-stable-release }}
          echo daily_variable
          echo ${{ steps.check-if-scheduled-test.outputs.scheduled-daily-release }}

      - name: element2
        id: job-id
        run: |
          echo "::set-output name=ele-tt::ele-tt-value"
          echo  ${{github.ref_name}}
          echo again
          if [ ${{github.ref_name}} == 'main' ]; then
            echo main
          else
            echo other
          fi

      - name: echo test
        run: echo ${{ steps.job1.outputs.tv2 }} ${{ steps.job-id.outputs.ele-tt }}
        
      - name: echo test2
        run: echo ${{ github.GITHUB_RUN_ATTEMPT }} ${{ github.event_name }}
